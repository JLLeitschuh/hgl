<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.liguo.hgl.proxydao.dao.TbAccountMapper" >
  <resultMap id="BaseResultMap" type="com.liguo.hgl.proxydao.model.TbAccount" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="balance" property="balance" jdbcType="DOUBLE" />
    <result column="freeze" property="freeze" jdbcType="DOUBLE" />
    <result column="bank_account" property="bankAccount" jdbcType="VARCHAR" />
    <result column="bank" property="bank" jdbcType="VARCHAR" />
    <result column="branch" property="branch" jdbcType="VARCHAR" />
    <result column="accountbank_id" property="accountbankId" jdbcType="INTEGER" />
    <result column="version" property="version" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Object_Where_Clause" >
    <trim prefix="where" prefixOverrides="and|or" >
      <if test="parameter.balance != null" >
         and balance = #{parameter.balance,jdbcType=DOUBLE}
      </if>
      <if test="parameter.freeze != null" >
         and freeze = #{parameter.freeze,jdbcType=DOUBLE}
      </if>
      <if test="parameter.bankAccount != null" >
         and bank_account = #{parameter.bankAccount,jdbcType=VARCHAR}
      </if>
      <if test="parameter.bank != null" >
         and bank = #{parameter.bank,jdbcType=VARCHAR}
      </if>
      <if test="parameter.branch != null" >
         and branch = #{parameter.branch,jdbcType=VARCHAR}
      </if>
      <if test="parameter.accountbankId != null" >
         and accountbank_id = #{parameter.accountbankId,jdbcType=INTEGER}
      </if>
      <if test="parameter.version != null" >
         and version = #{parameter.version,jdbcType=INTEGER}
      </if>
    </trim>
  </sql>
  <sql id="Base_Column_List" >
    id, balance, freeze, bank_account, bank, branch, accountbank_id, version
  </sql>
  <select id="selectByObject" parameterType="com.liguo.hgl.proxydao.model.Criteria" resultMap="BaseResultMap" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_account
    <if test="parameter != null" >
      <include refid="Object_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="common.Mysql_Pagination_Limit" />
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tb_account
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" flushCache="true" >
    delete from tb_account
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByObject" parameterType="com.liguo.hgl.proxydao.model.Criteria" flushCache="true" >
    delete from tb_account
    <if test="parameter != null" >
      <include refid="Object_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.liguo.hgl.proxydao.model.TbAccount" useGeneratedKeys="true" keyProperty="id">
    insert into hgl.tb_account (id
      )
    values (#{id,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.liguo.hgl.proxydao.model.TbAccount" useGeneratedKeys="true" keyProperty="id">
    insert into tb_account
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="balance != null" >
        balance,
      </if>
      <if test="freeze != null" >
        freeze,
      </if>
      <if test="bankAccount != null" >
        bank_account,
      </if>
      <if test="bank != null" >
        bank,
      </if>
      <if test="branch != null" >
        branch,
      </if>
      <if test="accountbankId != null" >
        accountbank_id,
      </if>
      <if test="version != null" >
        version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="balance != null" >
        #{balance,jdbcType=DOUBLE},
      </if>
      <if test="freeze != null" >
        #{freeze,jdbcType=DOUBLE},
      </if>
      <if test="bankAccount != null" >
        #{bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="bank != null" >
        #{bank,jdbcType=VARCHAR},
      </if>
      <if test="branch != null" >
        #{branch,jdbcType=VARCHAR},
      </if>
      <if test="accountbankId != null" >
        #{accountbankId,jdbcType=INTEGER},
      </if>
      <if test="version != null" >
        #{version,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByObject" parameterType="com.liguo.hgl.proxydao.model.Criteria" resultType="java.lang.Integer" >
    select count(*) from tb_account
    <if test="parameter != null" >
      <include refid="Object_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.liguo.hgl.proxydao.model.TbAccount" flushCache="true" >
    update tb_account
    <set >
      <if test="balance != null" >
        balance = #{balance,jdbcType=DOUBLE},
      </if>
      <if test="freeze != null" >
        freeze = #{freeze,jdbcType=DOUBLE},
      </if>
      <if test="bankAccount != null" >
        bank_account = #{bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="bank != null" >
        bank = #{bank,jdbcType=VARCHAR},
      </if>
      <if test="branch != null" >
        branch = #{branch,jdbcType=VARCHAR},
      </if>
      <if test="accountbankId != null" >
        accountbank_id = #{accountbankId,jdbcType=INTEGER},
      </if>
      <if test="version != null" >
        version = version + 1,
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
     and version = #{version,jdbcType=INTEGER} 
  </update>
  <update id="updateByPrimaryKey" parameterType="com.liguo.hgl.proxydao.model.TbAccount" flushCache="true" >
    update tb_account
    set balance = #{balance,jdbcType=DOUBLE},
      freeze = #{freeze,jdbcType=DOUBLE},
      bank_account = #{bankAccount,jdbcType=VARCHAR},
      bank = #{bank,jdbcType=VARCHAR},
      branch = #{branch,jdbcType=VARCHAR},
      accountbank_id = #{accountbankId,jdbcType=INTEGER},
      version = version + 1
    where id = #{id,jdbcType=INTEGER}
     and version = #{version,jdbcType=INTEGER} 
  </update>
  
   <select id="selectAccountByUserId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
   select * from tb_account where id = (
		select 
		case when twu.type_id = 104 or twu.type_id = 102 
			then (select account_id from tb_shop_info where twu.shop_id = id) 
			else (select account_id from tb_user_info where twu.userinfo_id = id)
		end as account
		from tb_web_user twu
		where twu.id = #{id,jdbcType=INTEGER})
  </select>
</mapper>