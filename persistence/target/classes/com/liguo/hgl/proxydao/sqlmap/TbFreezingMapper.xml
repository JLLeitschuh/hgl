<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.liguo.hgl.proxydao.dao.TbFreezingMapper" >
  <resultMap id="BaseResultMap" type="com.liguo.hgl.proxydao.model.TbFreezing" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="account_id" property="accountId" jdbcType="INTEGER" />
    <result column="order_serial_no" property="orderSerialNo" jdbcType="VARCHAR" />
    <result column="freeze_money" property="freezeMoney" jdbcType="DOUBLE" />
    <result column="unfreeze_money" property="unfreezeMoney" jdbcType="DOUBLE" />
    <result column="balance" property="balance" jdbcType="DOUBLE" />
    <result column="freeze" property="freeze" jdbcType="DOUBLE" />
    <result column="opear_dt" property="opearDt" jdbcType="BIGINT" />
    <result column="finish" property="finish" jdbcType="INTEGER" />
    <result column="version" property="version" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Object_Where_Clause" >
    <trim prefix="where" prefixOverrides="and|or" >
      <if test="parameter.orderId != null" >
         and order_id = #{parameter.orderId,jdbcType=INTEGER}
      </if>
      <if test="parameter.accountId != null" >
         and account_id = #{parameter.accountId,jdbcType=INTEGER}
      </if>
      <if test="parameter.orderSerialNo != null" >
         and order_serial_no = #{parameter.orderSerialNo,jdbcType=VARCHAR}
      </if>
      <if test="parameter.freezeMoney != null" >
         and freeze_money = #{parameter.freezeMoney,jdbcType=DOUBLE}
      </if>
      <if test="parameter.unfreezeMoney != null" >
         and unfreeze_money = #{parameter.unfreezeMoney,jdbcType=DOUBLE}
      </if>
      <if test="parameter.balance != null" >
         and balance = #{parameter.balance,jdbcType=DOUBLE}
      </if>
      <if test="parameter.freeze != null" >
         and freeze = #{parameter.freeze,jdbcType=DOUBLE}
      </if>
      <if test="parameter.opearDt != null" >
         and opear_dt = #{parameter.opearDt,jdbcType=BIGINT}
      </if>
      <if test="parameter.finish != null" >
         and finish = #{parameter.finish,jdbcType=INTEGER}
      </if>
      <if test="parameter.version != null" >
         and version = #{parameter.version,jdbcType=INTEGER}
      </if>
    </trim>
  </sql>
  <sql id="Base_Column_List" >
    id, order_id, account_id, order_serial_no, freeze_money, unfreeze_money, balance, 
    freeze, opear_dt, finish, version
  </sql>
  <select id="selectByObject" parameterType="com.liguo.hgl.proxydao.model.Criteria" resultMap="BaseResultMap" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_freezing
    <if test="parameter != null" >
      <include refid="Object_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="common.Mysql_Pagination_Limit" />
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tb_freezing
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" flushCache="true" >
    delete from tb_freezing
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByObject" parameterType="com.liguo.hgl.proxydao.model.Criteria" flushCache="true" >
    delete from tb_freezing
    <if test="parameter != null" >
      <include refid="Object_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.liguo.hgl.proxydao.model.TbFreezing" useGeneratedKeys="true" keyProperty="id">
    insert into hgl.tb_freezing (id, order_id, account_id, 
      order_serial_no, freeze_money, unfreeze_money, 
      balance, freeze, opear_dt
      )
    values (#{id,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER}, #{accountId,jdbcType=INTEGER}, 
      #{orderSerialNo,jdbcType=VARCHAR}, #{freezeMoney,jdbcType=DOUBLE}, #{unfreezeMoney,jdbcType=DOUBLE}, 
      #{balance,jdbcType=DOUBLE}, #{freeze,jdbcType=DOUBLE}, #{opearDt,jdbcType=BIGINT}
     )
  </insert>
  <insert id="insertSelective" parameterType="com.liguo.hgl.proxydao.model.TbFreezing" useGeneratedKeys="true" keyProperty="id">
    insert into tb_freezing
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="accountId != null" >
        account_id,
      </if>
      <if test="orderSerialNo != null" >
        order_serial_no,
      </if>
      <if test="freezeMoney != null" >
        freeze_money,
      </if>
      <if test="unfreezeMoney != null" >
        unfreeze_money,
      </if>
      <if test="balance != null" >
        balance,
      </if>
      <if test="freeze != null" >
        freeze,
      </if>
      <if test="opearDt != null" >
        opear_dt,
      </if>
      <if test="finish != null" >
        finish,
      </if>
      <if test="version != null" >
        version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="accountId != null" >
        #{accountId,jdbcType=INTEGER},
      </if>
      <if test="orderSerialNo != null" >
        #{orderSerialNo,jdbcType=VARCHAR},
      </if>
      <if test="freezeMoney != null" >
        #{freezeMoney,jdbcType=DOUBLE},
      </if>
      <if test="unfreezeMoney != null" >
        #{unfreezeMoney,jdbcType=DOUBLE},
      </if>
      <if test="balance != null" >
        #{balance,jdbcType=DOUBLE},
      </if>
      <if test="freeze != null" >
        #{freeze,jdbcType=DOUBLE},
      </if>
      <if test="opearDt != null" >
        #{opearDt,jdbcType=BIGINT},
      </if>
      <if test="finish != null" >
        #{finish,jdbcType=INTEGER},
      </if>
      <if test="version != null" >
        #{version,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByObject" parameterType="com.liguo.hgl.proxydao.model.Criteria" resultType="java.lang.Integer" >
    select count(*) from tb_freezing
    <if test="parameter != null" >
      <include refid="Object_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.liguo.hgl.proxydao.model.TbFreezing" flushCache="true" >
    update tb_freezing
    <set >
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="accountId != null" >
        account_id = #{accountId,jdbcType=INTEGER},
      </if>
      <if test="orderSerialNo != null" >
        order_serial_no = #{orderSerialNo,jdbcType=VARCHAR},
      </if>
      <if test="freezeMoney != null" >
        freeze_money = #{freezeMoney,jdbcType=DOUBLE},
      </if>
      <if test="unfreezeMoney != null" >
        unfreeze_money = #{unfreezeMoney,jdbcType=DOUBLE},
      </if>
      <if test="balance != null" >
        balance = #{balance,jdbcType=DOUBLE},
      </if>
      <if test="freeze != null" >
        freeze = #{freeze,jdbcType=DOUBLE},
      </if>
      <if test="opearDt != null" >
        opear_dt = #{opearDt,jdbcType=BIGINT},
      </if>
      <if test="finish != null" >
        finish = #{finish,jdbcType=INTEGER},
      </if>
      <if test="version != null" >
        version = version + 1,
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
     and version = #{version,jdbcType=INTEGER} 
  </update>
  <update id="updateByPrimaryKey" parameterType="com.liguo.hgl.proxydao.model.TbFreezing" flushCache="true" >
    update tb_freezing
    set order_id = #{orderId,jdbcType=INTEGER},
      account_id = #{accountId,jdbcType=INTEGER},
      order_serial_no = #{orderSerialNo,jdbcType=VARCHAR},
      freeze_money = #{freezeMoney,jdbcType=DOUBLE},
      unfreeze_money = #{unfreezeMoney,jdbcType=DOUBLE},
      balance = #{balance,jdbcType=DOUBLE},
      freeze = #{freeze,jdbcType=DOUBLE},
      opear_dt = #{opearDt,jdbcType=BIGINT},
      finish = #{finish,jdbcType=INTEGER},
      version = version + 1
    where id = #{id,jdbcType=INTEGER}
     and version = #{version,jdbcType=INTEGER} 
  </update>
</mapper>