<?xml version="1.0" encoding="UTF-8"?><beans default-lazy-init="false"       xmlns="http://www.springframework.org/schema/beans"       xmlns:context="http://www.springframework.org/schema/context"       xmlns:aop="http://www.springframework.org/schema/aop"       xmlns:tx="http://www.springframework.org/schema/tx"       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"       xsi:schemaLocation="http://www.springframework.org/schema/beans        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd        http://www.springframework.org/schema/aop        http://www.springframework.org/schema/aop/spring-aop-3.2.xsd        http://www.springframework.org/schema/tx        http://www.springframework.org/schema/tx/spring-tx-3.2.xsd        http://www.springframework.org/schema/context        http://www.springframework.org/schema/context/spring-context-3.2.xsd"       default-autowire="byName">    <!--<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">        <property name="locations" value="classpath:properties/application.properties" />    </bean>-->    <context:component-scan base-package="com.liguo"/>    <context:component-scan base-package="com.linkon"/>    <context:property-placeholder location="classpath*:properties/*.properties" />    <aop:aspectj-autoproxy/>    <bean id="log-filter" class="com.alibaba.druid.filter.logging.Slf4jLogFilter">        <property name="connectionLogEnabled" value="false"/>        <property name="statementLogEnabled" value="false"/>        <property name="resultSetLogEnabled" value="true"/>    </bean>        <bean class="org.springframework.web.servlet.view.ResourceBundleViewResolver">                      <property name="basenames">                          <list>                              <value>views</value>                          </list>                      </property>                      <property name="defaultParentView" value="default"/>      </bean>  	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">                      <property name="maxUploadSize" value="1024000000"/>                      <property name="resolveLazily" value="true"/>                      <property name="maxInMemorySize" value="4096"/>                  </bean>      <!-- 阿里巴巴数据库连接池 -->    <bean id="jndiDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">        <!-- 基本属性 url、user、password -->        <property name="url" value="jdbc:mysql://localhost:3306/hgl?characterEncoding=UTF-8&amp;characterSetResults=UTF-8"/>     <!--<property name="url" value="jdbc:mysql://192.168.0.133:3306/hgl?characterEncoding=UTF-8&amp;characterSetResults=UTF-8"/> -->        <property name="username" value="root"/>        <property name="password" value="123"/>        <!-- java -cp druid-1.0.7.jar com.alibaba.druid.filter.config.ConfigTools you_password 即输出加密后密码 -->        <!-- 解密配置 -->       <!--  <property name="connectionProperties" value="config.decrypt=true"/> -->        <!-- 配置初始化大小、最小、最大 -->        <property name="initialSize" value="5"/>        <property name="minIdle" value="5"/>        <property name="maxActive" value="20"/>        <!-- 配置获取连接等待超时的时间 -->        <property name="maxWait" value="60000"/>        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->        <property name="timeBetweenEvictionRunsMillis" value="60000"/>        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->        <property name="minEvictableIdleTimeMillis" value="300000"/>        <property name="validationQuery" value="SELECT 'x'"/>        <property name="testWhileIdle" value="true"/>        <property name="testOnBorrow" value="false"/>        <property name="testOnReturn" value="false"/>        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->        <property name="poolPreparedStatements" value="false"/>        <!-- 配置监控统计拦截的filters -->        <property name="proxyFilters">            <list>                <ref bean="log-filter"/>            </list>        </property>        <property name="filters" value="config,wall,stat,slf4j"/>    </bean>    <!-- 配置事务管理器 -->    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">        <property name="dataSource" ref="jndiDataSource"/>    </bean>    <!-- 支持事务注解方式 -->    <tx:annotation-driven transaction-manager="transactionManager"/>    <!--配置事物通知-->    <tx:advice id="txAdvice" transaction-manager="transactionManager">        <tx:attributes>            <tx:method name="get*,query*" read-only="true"/>            <tx:method name="*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>        </tx:attributes>    </tx:advice>    <!-- aop:配置切入点；配置通知-->    <aop:config>        <aop:pointcut id="bizMethods" expression="execution(* com.liguo.hgl.service.*.*.*(..)) OR execution(* com.liguo.hgl.business.*.*.*(..))"/>        <aop:advisor advice-ref="txAdvice" pointcut-ref="bizMethods"/>    </aop:config>    <!-- 配置SqlSessionFactoryBean -->    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">        <property name="dataSource" ref="jndiDataSource"/>        <property name="configLocation" value="classpath:mybatis/mybatis-configuration.xml"/>        <!-- mapper和resultmap配置路径 -->        <property name="mapperLocations">            <list>                <value>classpath:com/liguo/hgl/proxydao/sqlmap/*.xml</value>            </list>        </property>    </bean>    <!-- mybatis模板的配置 -->    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">        <constructor-arg index="0" ref="sqlSessionFactory"></constructor-arg>    </bean>        <bean id="recommendCode"  class="com.liguo.hgl.proxydao.util.RecommendCode">    	<property name="type" value="reCode"></property>    	<property name="step" value="5"></property>    </bean>        <bean id="mappingJacksonHttpMessageConverter"		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">		<property name="supportedMediaTypes">			<list><value>text/html;charset=UTF-8</value></list>		</property>	</bean></beans>